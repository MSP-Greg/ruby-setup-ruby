name: Test this action
on:
  pull_request:
  push:
    branches-ignore:
    - v1
    tags-ignore:
    - '*'
    paths-ignore:
    - README.md
  schedule:
    - cron: '0 7 * * SUN'
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        # os: [ ubuntu-16.04, ubuntu-18.04, ubuntu-20.04, macos-10.15, windows-2016, windows-2019 ]
        os: [ windows-2019 ]
        # Use various version syntax here for testing
        ruby: [ 2.2, 2.3, 2.4, 2.5, 2.6.6, 2.7, ruby-head, debug, jruby-9.1, jruby, jruby-head, truffleruby, truffleruby-head ]
        include:
        # - { os: ubuntu-18.04, ruby: rubinius }
        - { os: windows-2016, ruby: mingw }
        - { os: windows-2019, ruby: mingw }
        - { os: windows-2019, ruby: mswin }
        exclude:
        - { os: windows-2016, ruby: debug }
        - { os: windows-2016, ruby: truffleruby }
        - { os: windows-2016, ruby: truffleruby-head }
        - { os: windows-2019, ruby: debug }
        - { os: windows-2019, ruby: truffleruby }
        - { os: windows-2019, ruby: truffleruby-head }

    name: ${{ matrix.os }} ${{ matrix.ruby }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2

    - uses: ./
      with:
        ruby-version: ${{ matrix.ruby }}

    - name: bash test_ruby.rb
      shell: bash
      run: |
        echo OSTYPE $OSTYPE
        b=$(bundle -v)
        g=$(gem --version)
        r=$(rake --version)
        ruby test_ruby.rb "$b" "$g" "$r"

    - name: pwsh test_ruby.rb
      shell: pwsh
      run: |
        $b = $(bundle -v)
        $g = $(gem --version)
        $r = $(rake --version)
        ruby test_ruby.rb "$b" "$g" "$r"
        if ($IsWindows -and ($(ruby -e 'STDOUT.write RUBY_VERSION') -ge '2.4') -and $(ruby -e 'STDOUT.write RUBY_PLATFORM').Contains('mingw')) {
          ridk version
          echo ''
        }

    - name: C extension test
      run: gem install json:2.2.0 --no-document

    - run: bundle install
    - run: bundle exec rake --version

    - name: which ruby, rake
      shell: bash
      run: which -a ruby rake bash

    - name: where ruby, rake, bash
      if: startsWith(matrix.os, 'windows')
      run: |
        $ErrorActionPreference = 'Continue'
        $where = 'ruby', 'rake', 'bash'
        foreach ($e in $where) {
          $rslt = where.exe $e 2>&1 | Out-String
          if ($rslt.contains($e)) { echo $rslt.Trim() }
          else { echo "Can't find $e" }
          echo ''
        }

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: yarn install
    - run: yarn run package
    - name: Check generated files are up to date
      run: git diff --exit-code
